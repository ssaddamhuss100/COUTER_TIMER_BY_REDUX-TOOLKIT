import { createSlice } from "@reduxjs/toolkit";

//initial state
const INITIAL_STATE = { isRunning: false, elapsedTime: 0 };

// Create the slice using createSlice
export const timerSlice = createSlice({
  name: "timer", 
  initialState: INITIAL_STATE, 
  reducers: {
    // start the timer
    startTimer: (state,action) => {
      // console.log(" startTimer state isRunning : ",state.isRunning);
      // console.log(" startTimer action payload : ",action.payload)
      state.isRunning = true; // Set isRunning to true when the timer starts
    },

    //  pause the timer
    pauseTimer: (state, action) => {
      // console.log(" pauseTimer state.isRunning : ",state.isRunning);
      // console.log(" pauseTimer action.payload : ",action.payload)
      state.isRunning = false; // Set isRunning to false when the timer pauses
    },


    // reset the timer
    resetTimer: (state,action) => {
      state.isRunning = false; // Timer stops when reset
      state.elapsedTime = 0; // Reset the elapsed time to 0
      // console.log(" resetTimer state : ", state);
      // console.log(" pauseTimer action.payload : ",action.payload)

      
    },

    // increment the timer (typically called in an interval)
    incrementTimer: (state, action) => { 
      if (state.isRunning) {   
        state.elapsedTime += action.payload; // Increment the elapsed time by the payload
        // console.log("incrementTimer  state.isRunning", state.isRunning);
        // console.log(" incrementTimer action.payload" ,action.payload);
      }
    },
  },
});

// Export the actions generated by createSlice (for use in components)

 export const { startTimer, pauseTimer, resetTimer,incrementTimer} = timerSlice.actions;

// Export the reducer to be used in the Redux store configuration
export const timerReducer = timerSlice.reducer;
